(in-package #:org.shirakumo.random-noise)

(defun fractal (generator position &key (frequency 4f0) (octaves 1) (lacunarity 2) (persistence 0.5f0) (xxhash (xxhash)))
  (declare (type xxhash xxhash))
  (declare (type single-float frequency))
  (declare (type (unsigned-byte 16) octaves lacunarity))
  (with-sample a (sample 0f0)
    (let ((amplitude-sum 0f0)
          (amplitude 1f0))
      (dotimes (o octaves)
        (with-sample b (funcall generator position frequency (!32 (+ o xxhash)))
          (incf a (* amplitude b))
          (incf adx (* amplitude bdx))
          (incf ady (* amplitude bdy))
          (incf adz (* amplitude bdz))
          (incf amplitude-sum amplitude)
          (setf frequency (* frequency lacunarity))
          (setf amplitude (* amplitude persistence))))
      (let ((s (/ amplitude-sum)))
        (sample (* a s)
                (* adx s)
                (* ady s)
                (* adz s))))))
