(in-package #:org.shirakumo.random-noise)

(define-noise-function value/1d (point deriv)
  (let* ((hx0 (noise ix0))
         (hx1 (noise ix1))
         (dtx (smooth-dt tx0))
         (tx (smooth tx0))
         (a hx0)
         (b (- hx1 hx0)))
    (vsetf deriv (* b dtx) 0 0)
    (/ (+ a (* b tx)) 255)))

(define-noise-function value/2d (point deriv)
  (let* ((h0 (noise ix0))
         (h1 (noise ix1))
         (h00 (noise (+ h0 iy0)))
         (h10 (noise (+ h1 iy0)))
         (h01 (noise (+ h0 iy1)))
         (h11 (noise (+ h1 iy1)))
         (dtx (smooth-dt tx0))
         (dty (smooth-dt ty0))
         (tx (smooth tx0))
         (ty (smooth ty0))
         (a h00)
         (b (- h10 h00))
         (c (- h01 h00))
         (d (+ (- h11 h01 h10) h00)))
    (vsetf deriv
           (* (+ b (* d ty)) dtx)
           (* (+ c (* d tx)) dty)
           0)
    (/ (+ a (* b tx) (* (+ c (* d tx)) ty)) 255)))

(define-noise-function value/3d (point deriv)
  (let* ((h0 (noise ix0))
         (h1 (noise ix1))
         (h00 (noise (+ h0 iy0)))
         (h10 (noise (+ h1 iy0)))
         (h01 (noise (+ h0 iy1)))
         (h11 (noise (+ h1 iy1)))
         (h000 (noise (+ h00 iz0)))
         (h100 (noise (+ h10 iz0)))
         (h010 (noise (+ h01 iz0)))
         (h110 (noise (+ h11 iz0)))
         (h001 (noise (+ h00 iz1)))
         (h101 (noise (+ h10 iz1)))
         (h011 (noise (+ h01 iz1)))
         (h111 (noise (+ h11 iz1)))
         (dtx (smooth-dt tx0))
         (dty (smooth-dt ty0))
         (dtz (smooth-dt tz0))
         (tx (smooth tx0))
         (ty (smooth ty0))
         (tz (smooth tz0))
         (a h000)
         (b (- h100 h000))
         (c (- h010 h000))
         (d (- h001 h000))
         (e (+ (- h110 h010 h100) h000))
         (f (+ (- h101 h001 h100) h000))
         (g (+ (- h011 h001 h010) h000))
         (h (+ (- h111 h011 h101 h110 h000) h001 h010 h100)))
    (vsetf deriv
           (* (+ b (* e ty) (* (+ f (* h ty)) tz)) dtx)
           (* (+ c (* e tx) (* (+ g (* h tx)) tz)) dty)
           (* (+ d (* f tx) (* (+ g (* h tx)) ty)) dtz))
    (/ (+ a (* b tx) (* (+ c (* e tx)) ty)
          (* (+ d (* f tx) (* (+ g (* h tx)) ty)) tz))
       255)))

(define-noise-entry-function value
  (vec3 value/3d)
  (vec2 value/2d)
  (float value/1d))
